basePath: /todos
definitions:
  models.Todo:
    properties:
      completed:
        type: boolean
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  models.TodoCompletedStatus:
    properties:
      completed:
        type: boolean
    type: object
info:
  contact:
    email: amadijerry823@gmail.com
    name: Amadi Jerry
    url: https://twitter.com/Jerry_Jaeger_
  description: A TODO APP API in Go using Gin framework.
  title: Todo App API
  version: "1.0"
paths:
  /:
    get:
      description: Responds with the list of all Todos as an Array.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Get Todos array
      tags:
      - Todos
    post:
      description: Create a New Todo Object
      parameters:
      - description: Create a new Todo Object
        in: body
        name: createTodo
        required: true
        schema:
          $ref: '#/definitions/models.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Todo'
      summary: Create a New Todo
      tags:
      - Todos
  /{id}:
    delete:
      description: Delete a Todo by it's Todo ID
      parameters:
      - description: update Todo Status by Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Delete Todo
      tags:
      - Todos
  /completed:
    get:
      description: Gets an array of all completed Todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
      summary: Get completed Todos
      tags:
      - Todos
  /status/{id}:
    patch:
      description: Change the status of a Todo from uncompleted to completed and vice
        versa
      parameters:
      - description: update Todo Status by Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: change the status of a Todo
        in: body
        name: completed
        required: true
        schema:
          $ref: '#/definitions/models.TodoCompletedStatus'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Todo'
      summary: Update Todo Status
      tags:
      - Todos
  /uncompleted:
    get:
      description: Gets an array of all uncompleted Todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
      summary: Get uncompleted Todos
      tags:
      - Todos
swagger: "2.0"
